Pointwise order dependencies (PODs) are dependencies that specify ordering semantics on attributes of tuples. POD discovery refers to the process of identifying the set $\Sigma$ of valid and minimal PODs  on a given data set D.
In practice D is typically large and keeps changing, and it is prohibitively expensive to compute $\Sigma$ from scratch every time. In this paper, we make a first effort to study the incremental POD discovery problem, aiming at computing changes $\triangle \Sigma$ to $\Sigma$ such that $\Sigma \oplus \triangle \Sigma$ is the set of valid and minimal PODs on D with a set $\triangle D$ of tuple insertion updates. (1) We first propose a novel indexing technique for inputs $\Sigma$ and D. We give algorithms to build and choose indexes for $\Sigma$ and D, and to update indexes in response to $\triangle D$. We show that POD violations w.r.t. $\Sigma$ incurred by $\triangle D$ can be efficiently identified by leveraging the proposed indexes, with a cost dependent on $log(|D|)$. (2) We then present an effective algorithm for computing $\triangle \Sigma$, based on $\Sigma$ and identified violations caused by $\triangle D$. The PODs in $\Sigma$  that become invalid on $D+\triangle D$  are efficiently detected with the proposed indexes, and further new valid PODs on $D+\triangle D$ are identified by refining those invalid PODs in $\Sigma$  on $D+\triangle D$. (3) Finally, using both real-life and synthetic datasets, we experimentally show that our approach outperforms the
batch approach that computes from scratch, up to orders of magnitude.