Weak isolation levels, such as Read Committed and Snapshot Isolation, are widely used by databases for their higher concurrency, but introduce subtle correctness errors in applications that only experts can identify.
This paper proposes IsoDiff, a tool to help a developer debug the anomalies caused by weak isolation for an application. IsoDiff is built on existing theories, which model anomalies as cycles in the transaction dependency graph, and tries to address the following challenges when applying these theories to debugging: to address the challenge that the number of cycles in a dependency graph can be non-polynomial with respect to the number of vertices and edges, IsoDiff finds and breaks a representative subset of cycles with a multi-iteration algorithm; to reduce false positives, IsoDiff proposes two novel methods (correlation detection and timing relationship check) to aggressively eliminate as many false positives as possible and further provides a mechanism to incorporate the developerâ€™s feedback to eliminate the remaining ones.
The evaluation of IsoDiff on TPC-C and seven real applications under Snapshot Isolation and Read Committed isolation shows that IsoDiff can balance computation time and the coverage of representative cycles; it can automatically eliminate a significant portion of false positives; and its feedback mechanism allows a developer to express the root cause of false positives, which can eliminate many false positives with only a small number of developer hints.